<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>haoyu blog</title>
    <link>https://haoyu36.github.io/</link>
    <description>Recent content on haoyu blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 30 Jan 2023 15:02:57 +0000</lastBuildDate><atom:link href="https://haoyu36.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>python装饰器</title>
      <link>https://haoyu36.github.io/post/python%E8%A3%85%E9%A5%B0%E5%99%A8/</link>
      <pubDate>Mon, 30 Jan 2023 15:02:57 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E8%A3%85%E9%A5%B0%E5%99%A8/</guid>
      <description>[TOC] 装饰器 一：概述 是什么： 装饰器本质上是一个 Python 函数，可以让其他函数在不需要做任何代码变动的前提下增加额外的功能 装饰器的参数是被装饰的函数，返回</description>
    </item>
    
    <item>
      <title>python代码质量</title>
      <link>https://haoyu36.github.io/post/python%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/</link>
      <pubDate>Wed, 26 Oct 2022 15:00:55 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/</guid>
      <description>[TOC] 代码质量 相关文档： 编码质量 概述 Pythonic 就是充分利用 Python 语言特性，写出简洁优美的代码 Python 之禅 import this 是 Python 的一个彩蛋，在交互式解释器中输入就会显示。Pyth</description>
    </item>
    
    <item>
      <title>安全</title>
      <link>https://haoyu36.github.io/post/%E5%AE%89%E5%85%A8/</link>
      <pubDate>Sat, 02 Oct 2021 15:40:00 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/%E5%AE%89%E5%85%A8/</guid>
      <description>安全 [TOC] 在安全领域，越简单的东西，安全风险越低；越复杂的东西，安全风险越高 一：概述 其实对于安全来说，最大的风险是人的风险，即内部管理的风险 什么</description>
    </item>
    
    <item>
      <title>mysql基础</title>
      <link>https://haoyu36.github.io/post/mysql%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/mysql%E5%9F%BA%E7%A1%80/</guid>
      <description>[TOC] 基础 一：数据库 1.1 MySQL 引擎 存储引擎指表的类型，决定了表在计算机中的存储方式。MySQL 默认存储引擎为 InnoDB，支持事务、原子操作、回滚等等</description>
    </item>
    
    <item>
      <title>python基础</title>
      <link>https://haoyu36.github.io/post/python%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E5%9F%BA%E7%A1%80/</guid>
      <description>[TOC] 基础 一：概述 Python 定义 Python 是一种解释型、动态、面向对象的编程语言 解释型 Python 是一门解释型语言，即在运行之前不需要编译（其他解释型语言 PHP 和 Ruby） 一</description>
    </item>
    
    <item>
      <title>python垃圾回收</title>
      <link>https://haoyu36.github.io/post/python%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</guid>
      <description>垃圾回收 Garbage Collection A way for a program to automatically release memory when the object taking up that space is no longer in use 一：回收机制 GC (Garbage Collection) 是一种自动内存管理机制，当对应内存不再需要时，就予以释放。这种内存资</description>
    </item>
    
    <item>
      <title>python列表与元组</title>
      <link>https://haoyu36.github.io/post/python%E5%88%97%E8%A1%A8%E4%B8%8E%E5%85%83%E7%BB%84/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E5%88%97%E8%A1%A8%E4%B8%8E%E5%85%83%E7%BB%84/</guid>
      <description>列表与元祖 [TOC] 列表是 Python 内置的一种数据类型，是一种有序的集合，包含 0 个或多个对象引用的有序序列，没有长度限制，可自由增删元素，使用灵活 列表 概述 列</description>
    </item>
    
    <item>
      <title>python面向对象</title>
      <link>https://haoyu36.github.io/post/python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</guid>
      <description>面向对象 本文主要说明面向对象在 python 中的实现，有关面向对象的知识详见 06-面向对象 [TOC] 面向对象 In python everything is an object. objects are first class citizens 面向对象 对象： 对象是一个数据以</description>
    </item>
    
    <item>
      <title>python使用—json</title>
      <link>https://haoyu36.github.io/post/python%E4%BD%BF%E7%94%A8json/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E4%BD%BF%E7%94%A8json/</guid>
      <description>[TOC] json 一：序列化与反序列化 **JSON（JavaScript Object Notation）**是一种轻量级数据交换格式，json 格式包括对象和数组，用大</description>
    </item>
    
    <item>
      <title>python使用—文件读写</title>
      <link>https://haoyu36.github.io/post/python%E4%BD%BF%E7%94%A8%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E4%BD%BF%E7%94%A8%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/</guid>
      <description>[TOC] 文件读写 一：文件 文件是储存在外部介质上的数据或信息集合。如程序中的源程序，数据中保存的数据，图像中的像素数据 二进制文件是信息按照非字符但特</description>
    </item>
    
    <item>
      <title>python字典与集合</title>
      <link>https://haoyu36.github.io/post/python%E5%AD%97%E5%85%B8%E4%B8%8E%E9%9B%86%E5%90%88/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E5%AD%97%E5%85%B8%E4%B8%8E%E9%9B%86%E5%90%88/</guid>
      <description>字典与集合 [TOC] Python 基本是运行在字典上面的，module 是一个字典，global 是一个字典。优化了字典，就优化了 Python 字典 概述 字典是内置类型中唯一的映</description>
    </item>
    
    <item>
      <title>redis基础</title>
      <link>https://haoyu36.github.io/post/redis%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/redis%E5%9F%BA%E7%A1%80/</guid>
      <description>[TOC] 基础 一：基础 1.1 概述 Redis 是一种速度非常快的键值（Key-Value）数据库，数据是存储在内存中的，并通过异步的方式将数据写入磁盘 使用 Redis 只能通过</description>
    </item>
    
    <item>
      <title>安全运维体系</title>
      <link>https://haoyu36.github.io/post/%E5%AE%89%E5%85%A8%E8%BF%90%E7%BB%B4%E4%BD%93%E7%B3%BB/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/%E5%AE%89%E5%85%A8%E8%BF%90%E7%BB%B4%E4%BD%93%E7%B3%BB/</guid>
      <description>安全运维体系 [TOC] 一：概述 云端安全运维体系包括两个维度：身份访问控制、安全监控运营 目标 保证用户对资源的合理访问 限制乃至阻止用户对资源的不合理访问</description>
    </item>
    
    <item>
      <title>编码</title>
      <link>https://haoyu36.github.io/post/%E7%BC%96%E7%A0%81/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/%E7%BC%96%E7%A0%81/</guid>
      <description>[TOC] 编码 编码是根据某一字符编码规则，将人类可读的字符串翻译为计算机中存储的原始字节 一：字符 计算机中的所有东西都是字节，磁盘上的文件是一系列字节</description>
    </item>
    
    <item>
      <title>攻击手段</title>
      <link>https://haoyu36.github.io/post/%E6%94%BB%E5%87%BB%E6%89%8B%E6%AE%B5/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/%E6%94%BB%E5%87%BB%E6%89%8B%E6%AE%B5/</guid>
      <description>攻击手段 [TOC] 一：概述 常见的安全漏洞包括密码漏洞、操作系统相关漏洞、中间件程序相关漏洞、开放端口相关漏洞、数据传送相关漏洞、局域网/广域网相关设</description>
    </item>
    
    <item>
      <title>凯撒密码</title>
      <link>https://haoyu36.github.io/post/%E5%87%AF%E6%92%92%E5%AF%86%E7%A0%81/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/%E5%87%AF%E6%92%92%E5%AF%86%E7%A0%81/</guid>
      <description>凯撒密码 一：概述 凯撒密码是已知最早，最简单的密码之一。通过替换字母完成加密，每个字母由字母表中其后特定位数的字母代替。如偏移量为1，则 A 变为</description>
    </item>
    
    <item>
      <title>垃圾回收</title>
      <link>https://haoyu36.github.io/post/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</guid>
      <description>垃圾回收 Garbage Collection A way for a program to automatically release memory when the object taking up that space is no longer in use 一：回收机制 GC (Garbage Collection) 是一种自动内存管理机制，当对应内存不再需要时，就予以释放。这种内存资</description>
    </item>
    
    <item>
      <title>网络层次</title>
      <link>https://haoyu36.github.io/post/%E7%BD%91%E7%BB%9C%E5%B1%82%E6%AC%A1/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/%E7%BD%91%E7%BB%9C%E5%B1%82%E6%AC%A1/</guid>
      <description>[TOC] 网络层次 分层是计算机技术最核心的一个思想。计算机科学中的任何问题，都可以通过加上一层逻辑层来解决 为了解决 (兼容)不同设备之间的通信问题，需</description>
    </item>
    
    <item>
      <title>Archive</title>
      <link>https://haoyu36.github.io/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/archives/</guid>
      <description>archives</description>
    </item>
    
    <item>
      <title>Search</title>
      <link>https://haoyu36.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
