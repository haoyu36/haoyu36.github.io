<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on haoyu blog</title>
    <link>https://haoyu36.github.io/tags/python/</link>
    <description>Recent content in python on haoyu blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 30 Jan 2023 15:02:57 +0000</lastBuildDate><atom:link href="https://haoyu36.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>python装饰器</title>
      <link>https://haoyu36.github.io/post/python%E8%A3%85%E9%A5%B0%E5%99%A8/</link>
      <pubDate>Mon, 30 Jan 2023 15:02:57 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E8%A3%85%E9%A5%B0%E5%99%A8/</guid>
      <description>[TOC] 装饰器 一：概述 是什么： 装饰器本质上是一个 Python 函数，可以让其他函数在不需要做任何代码变动的前提下增加额外的功能 装饰器的参数是被装饰的函数，返回</description>
    </item>
    
    <item>
      <title>python代码质量</title>
      <link>https://haoyu36.github.io/post/python%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/</link>
      <pubDate>Wed, 26 Oct 2022 15:00:55 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/</guid>
      <description>[TOC] 代码质量 相关文档： 编码质量 概述 Pythonic 就是充分利用 Python 语言特性，写出简洁优美的代码 Python 之禅 import this 是 Python 的一个彩蛋，在交互式解释器中输入就会显示。Pyth</description>
    </item>
    
    <item>
      <title>python基础</title>
      <link>https://haoyu36.github.io/post/python%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E5%9F%BA%E7%A1%80/</guid>
      <description>[TOC] 基础 一：概述 Python 定义 Python 是一种解释型、动态、面向对象的编程语言 解释型 Python 是一门解释型语言，即在运行之前不需要编译（其他解释型语言 PHP 和 Ruby） 一</description>
    </item>
    
    <item>
      <title>python垃圾回收</title>
      <link>https://haoyu36.github.io/post/python%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</guid>
      <description>垃圾回收 Garbage Collection A way for a program to automatically release memory when the object taking up that space is no longer in use 一：回收机制 GC (Garbage Collection) 是一种自动内存管理机制，当对应内存不再需要时，就予以释放。这种内存资</description>
    </item>
    
    <item>
      <title>python列表与元组</title>
      <link>https://haoyu36.github.io/post/python%E5%88%97%E8%A1%A8%E4%B8%8E%E5%85%83%E7%BB%84/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E5%88%97%E8%A1%A8%E4%B8%8E%E5%85%83%E7%BB%84/</guid>
      <description>列表与元祖 [TOC] 列表是 Python 内置的一种数据类型，是一种有序的集合，包含 0 个或多个对象引用的有序序列，没有长度限制，可自由增删元素，使用灵活 列表 概述 列</description>
    </item>
    
    <item>
      <title>python面向对象</title>
      <link>https://haoyu36.github.io/post/python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</guid>
      <description>面向对象 本文主要说明面向对象在 python 中的实现，有关面向对象的知识详见 06-面向对象 [TOC] 面向对象 In python everything is an object. objects are first class citizens 面向对象 对象： 对象是一个数据以</description>
    </item>
    
    <item>
      <title>python字典与集合</title>
      <link>https://haoyu36.github.io/post/python%E5%AD%97%E5%85%B8%E4%B8%8E%E9%9B%86%E5%90%88/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/python%E5%AD%97%E5%85%B8%E4%B8%8E%E9%9B%86%E5%90%88/</guid>
      <description>字典与集合 [TOC] Python 基本是运行在字典上面的，module 是一个字典，global 是一个字典。优化了字典，就优化了 Python 字典 概述 字典是内置类型中唯一的映</description>
    </item>
    
    <item>
      <title>垃圾回收</title>
      <link>https://haoyu36.github.io/post/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</link>
      <pubDate>Fri, 01 Oct 2021 15:40:18 +0000</pubDate>
      
      <guid>https://haoyu36.github.io/post/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</guid>
      <description>垃圾回收 Garbage Collection A way for a program to automatically release memory when the object taking up that space is no longer in use 一：回收机制 GC (Garbage Collection) 是一种自动内存管理机制，当对应内存不再需要时，就予以释放。这种内存资</description>
    </item>
    
  </channel>
</rss>
